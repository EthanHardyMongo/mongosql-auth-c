stepback: true
command_type: system
buildvariants:

- matrix_name: full_matrix
  display_name: "${os}"
  tasks: ["*"]
  matrix_spec:
    os: "*"

pre:
  - command: shell.track
  - func: "fetch source"
  - func: "export variables"
  - func: "reset testing state"

post:
  - func: "generate reports"
  #- func: "upload artifacts"
  - command: shell.cleanup

tasks:

- name: build
  exec_timeout_secs: 14400 # 4h
  commands:
    - func: "install dependencies"
    - func: "build mongosql_auth"
      vars:
        release: true

- name: unit_tests
  exec_timeout_secs: 14400 # 4h
  commands:
    - func: "install dependencies"
    - func: "build mongosql_auth"
    - func: "run unit tests"

- name: integration_tests
  exec_timeout_secs: 14400 # 4h
  commands:
    - func: "install dependencies"
    - func: "start mongosqld"
    - func: "start mongo-orchestration"
    - func: "build mongosql_auth"
    - func: "run integration tests"

functions:

  "build mongosql_auth":
    command: shell.exec
    type: test
    params:
      script: |
          ${PREPARE_SHELL}
          export RELEASE='${release}'
          ${SCRIPT_DIR}/build-mongosql-auth.sh

  "export variables":
    - command: shell.exec
      params:
        silent: true
        working_dir: mongosql-auth-c
        script: |
          if [ "Windows_NT" = "$OS" ]; then
              set -o igncr
          fi

          export VARIANT="${variant|other}"

          export PROJECT_DIR="$(pwd)"
          if [ "Windows_NT" = "$OS" ]; then
             export PROJECT_DIR="$(cygpath -m $PROJECT_DIR)"
          fi

          export SCRIPT_DIR="$PROJECT_DIR/test/bin"

          # create expansions from values calculated above
          cat <<EOT > $PROJECT_DIR/expansions.yml
          SCRIPT_DIR: "$SCRIPT_DIR"
          PREPARE_SHELL: |
             if [ "Windows_NT" = "$OS" ]; then
                 set -o igncr
                 export SHELLOPTS
             fi
             export VARIANT="$VARIANT"
             export PROJECT_DIR="$PROJECT_DIR"
          EOT
    - command: expansions.update
      params:
        file: mongosql-auth-c/expansions.yml

  "fetch source":
    - command: shell.exec
      params:
        silent: true
        script: |
          rm -rf mongosql-auth-c
    - command: git.get_project
      params:
        directory: mongosql-auth-c
    - command: git.apply_patch
      type: test
      params:
        directory: mongosql-auth-c

  "generate reports":
    command: shell.exec
    params:
      script: |
        ${PREPARE_SHELL}
        ${SCRIPT_DIR}/generate-reports.sh

  "install dependencies":
    command: shell.exec
    params:
      script: |
        ${PREPARE_SHELL}
        ${SCRIPT_DIR}/install-build-deps.sh

  "reset testing state":
    - command: shell.exec
      params:
        silent: true
        script: |
          ${killall_mci}
    - command: shell.exec
      params:
        script: |
          ${PREPARE_SHELL}
          ${SCRIPT_DIR}/reset-testing-state.sh

  "run integration tests":
    - command: shell.exec
      type: test
      params:
        script: |
          ${PREPARE_SHELL}
          ${SCRIPT_DIR}/run-integration-tests.sh

  "run unit tests":
    - command: shell.exec
      type: test
      params:
        script: |
          ${PREPARE_SHELL}
          ${SCRIPT_DIR}/run-unit-tests.sh

  "start mongo-orchestration":
    - command: shell.exec
      params:
        script: |
          ${PREPARE_SHELL}
          ${SCRIPT_DIR}/start-orchestration.sh

  "start mongosqld":
    - command: shell.exec
      params:
        script: |
          ${PREPARE_SHELL}
          export EVG_USER=${evg_user}
          export EVG_KEY=${evg_key}
          export AWS_ACCESS_KEY_ID=${aws_key}
          export AWS_SECRET_ACCESS_KEY=${aws_secret}
          ${SCRIPT_DIR}/start-sqlproxy.sh

  "upload artifacts":
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_files_include_filter:
            - mongosql-auth-c/test/artifacts/log/*
        remote_file: mongosql-auth-c/artifacts/${build_variant}/${task_id}/
        content_type: text/plain
        bucket: mciuploads
        permissions: public-read
        display_name: "Log File - "

axes:

- id: os
  display_name: OS
  values:
  - id: ubuntu1404-64
    display_name: Ubuntu 14.04
    run_on: ubuntu1404-build
    variables:
      variant: ubuntu1404-64
  - id: rhel70
    display_name: RHEL 7.0
    variables:
      variant: rhel70
    run_on: rhel70
  - id: osx
    display_name: OSX 10.12
    run_on: macos-1012
    variables:
      variant: osx
  - id: windows-vs2015
    display_name: Windows 64 (VS2015)
    run_on: windows-64-vs2015-compile
    variables:
      variant: windows-vs2015

- id: os-disabled
  display_name: Disabled OSes
  values:
  - id: windows-vs2013
    display_name: Windows 64 (VS2013)
    run_on: windows-64-vs2013-compile
    variables:
      variant: windows-vs2013
  - id: debian71
    display_name: Debian 7.1
    run_on: debian71-test
    variables:
      variant: debian71
  - id: debian81
    display_name: Debian 8.1 (nightly)
    run_on: debian81-test
    variables:
      variant: debian81
  - id: linux-64-amazon-ami
    display_name: Amazon Linux (Enterprise)
    variables:
      variant: amazon
    run_on: linux-64-amzn-build
  - id: rhel62
    display_name: RHEL 6.2
    variables:
      variant: rhel62
    run_on: rhel62-test
  - id: rhel-71-ppc64le
    display_name: RHEL 7.1 PPC64LE
    variables:
      variant: rhel71-ppc
    run_on: rhel71-power8-test
    batchtime: 1440 # 1 day
  - id: rhel-72-s390x
    display_name: RHEL 7.2 s390x (nightly)
    variables:
      variant: rhel72-s390x
    run_on:
    - rhel72-zseries-build
    - rhel72-zseries-test
    batchtime: 1440 # 1 day
  - id: suse11-64
    display_name: SLES 11
    variables:
      variant: suse11
    run_on: suse11-test
  - id: suse12-64
    display_name: SLES 12
    variables:
      variant: suse12
    run_on: suse12-test
