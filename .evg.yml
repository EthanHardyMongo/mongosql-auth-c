stepback: true
command_type: system
buildvariants:

- matrix_name: full_matrix
  display_name: "${os}"
  tasks: ["*"]
  matrix_spec:
    os: "*"

pre:
  - command: shell.track
  - func: "fetch source"
  - func: "export variables"
  - func: "reset testing state"

post:
# - func: "upload artifacts"
  - command: shell.cleanup

tasks:

- name: build
  exec_timeout_secs: 14400 # 4h
  commands:
    - func: "install dependencies"
    - func: "build mongosql_auth"

- name: unit_tests
  exec_timeout_secs: 14400 # 4h
  commands:
    - func: "install dependencies"
    - func: "build mongosql_auth"
    - func: "run unit tests"

functions:

  "build mongosql_auth":
    command: shell.exec
    type: test
    params:
      script: |
          ${PREPARE_SHELL}
          ${SCRIPT_DIR}/build-mongosql-auth.sh

  "export variables":
    - command: shell.exec
      params:
        silent: true
        working_dir: mongosql-auth-c
        script: |
          if [ "Windows_NT" = "$OS" ]; then
              set -o igncr
          fi

          export PROJECT_DIR="$(pwd)"
          export SCRIPT_DIR="$PROJECT_DIR/test/bin"

          export CURRENT_VERSION="$(git describe --always)"
          if [ "${is_patch}" = "true" ]; then
             export CURRENT_VERSION="$CURRENT_VERSION-patch-${version_id}"
          fi
          export GIT_SPEC="$(git rev-parse HEAD)"

          export PUSH_ARCH="${push_arch}"
          export PUSH_NAME="${push_name}"

          export PATH="${cmake_path}:$PATH"

          export ON_EVERGREEN=true

          export PROJECT_DIR="$(pwd)"
          if [ "Windows_NT" = "$OS" ]; then
             export PROJECT_DIR="$(cygpath -m $PROJECT_DIR)"
          fi

          if [ "${cc}" != "" ]; then
            export CC="${cc}"
          fi

          # create expansions from values calculated above
          cat <<EOT > $PROJECT_DIR/expansions.yml
          CURRENT_VERSION: "$CURRENT_VERSION"
          PROJECT_DIR: "$PROJECT_DIR"
          SCRIPT_DIR: "$SCRIPT_DIR"
          PREPARE_SHELL: |
             if [ "Windows_NT" = "$OS" ]; then
                 set -o igncr
                 export SHELLOPTS
             fi

             export PROJECT_DIR="$PROJECT_DIR"

             export PUSH_ARCH="$PUSH_NAME"
             export PUSH_NAME="$PUSH_ARCH"

             # env variables to be used by scripts
             export ON_EVERGREEN="$ON_EVERGREEN"
             export CURRENT_VERSION="$CURRENT_VERSION"
             export GIT_SPEC="$GIT_SPEC"

             export PATH="$PATH"
             export CC="$CC"
          EOT
    - command: expansions.update
      params:
        file: mongosql-auth-c/expansions.yml

  "fetch source":
    - command: shell.exec
      params:
        silent: true
        script: |
          rm -rf mongosql-auth-c
    - command: git.get_project
      params:
        directory: mongosql-auth-c
    - command: git.apply_patch
      type: test
      params:
        directory: mongosql-auth-c

  "install dependencies":
    command: shell.exec
    params:
      script: |
        ${PREPARE_SHELL}
        ${SCRIPT_DIR}/install-build-deps.sh

  "reset testing state":
    - command: shell.exec
      params:
        silent: true
        script: |
          ${killall_mci}
    - command: shell.exec
      params:
        script: |
          ${PREPARE_SHELL}
          ${SCRIPT_DIR}/reset-testing-state.sh
    - command: shell.exec
      params:
        silent: true
        script: |
          mv ${PROJECT_DIR}/expansions.yml ${PROJECT_DIR}/test/artifacts

  "run unit tests":
    - command: shell.exec
      params:
        script: |
          ${PREPARE_SHELL}
          ${SCRIPT_DIR}/run-unit-tests.sh

  "upload artifacts":
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_files_include_filter:
            - mongosql-auth-c/test/artifacts/log/*.log
        remote_file: mongosql-auth-c/artifacts/${build_variant}/${task_id}/
        content_type: text/plain
        bucket: mciuploads
        permissions: public-read
        display_name: "Log File - "
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_files_include_filter:
            - mongosql-auth-c/test/artifacts/out/mongosql_auth.*
        remote_file: mongosql-auth-c/artifacts/${build_variant}/${task_id}/
        content_type: application/octet-stream
        bucket: mciuploads
        permissions: public-read
        display_name: "Plugin - "

axes:

- id: os
  display_name: OS
  values:
  - id: ubuntu1404-64
    display_name: Ubuntu 14.04
    run_on: ubuntu1404-build
    variables:
      push_arch: x86_64-ubuntu1404
      push_name: linux
      cmake_path: /opt/cmake/bin
      cc: /opt/mongodbtoolchain/v2/bin/clang
  - id: osx
    display_name: OSX 10.10
    run_on: osx-1010
    variables:
      push_arch: x86_64
      push_name: osx
      cmake_path: /Applications/Cmake.app/Contents/bin
  - id: windows
    display_name: Windows 64
    run_on: windows-64-vs2015-compile
    variables:
      archive_format: zip
      push_arch: x86_64
      push_name: win32
      separator: \\
      cmake_path: /cygdrive/c/cmake/bin
  - id: debian71
    display_name: Debian 7.1
    run_on: debian71-test
    disabled: true
    variables:
      push_arch: x86_64-debian71
      push_name: linux
      cmake_path: /opt/mongodbtoolchain/v2/lib/cmake
      cc: /opt/mongodbtoolchain/v2/bin/clang
  - id: debian81
    display_name: Debian 8.1 (nightly)
    run_on: debian81-test
    disabled: true
    variables:
      push_arch: x86_64-debian81
      push_name: linux
      cmake_path: /opt/mongodbtoolchain/v2/lib/cmake
      cc: /opt/mongodbtoolchain/v2/bin/clang
  - id: linux-64-amazon-ami
    display_name: Amazon Linux (Enterprise)
    disabled: true
    variables:
      push_arch: x86_64-enterprise-amzn64
      push_name: linux
      cmake_path: /opt/mongodbtoolchain/v2/lib/cmake
      cc: /opt/mongodbtoolchain/v2/bin/clang
    run_on: linux-64-amzn-build
  - id: rhel62
    display_name: RHEL 6.2
    disabled: true
    variables:
      push_arch: x86_64-rhel62
      push_name: linux
      cmake_path: /opt/cmake/bin
    run_on: rhel62-test
  - id: rhel70
    display_name: RHEL 7.0
    disabled: true
    variables:
      push_arch: x86_64-rhel70
      push_name: linux
      cmake_path: /opt/cmake/bin
    run_on: rhel70
  - id: rhel-71-ppc64le
    display_name: RHEL 7.1 PPC64LE
    disabled: true
    variables:
      push_arch: ppc64le-rhel71
      push_name: linux
      cmake_path: /opt/mongodbtoolchain/v2/lib/cmake
      cc: /opt/mongodbtoolchain/v2/bin/clang
    run_on: rhel71-power8-test
    batchtime: 1440 # 1 day
  - id: rhel-72-s390x
    display_name: RHEL 7.2 s390x (nightly)
    disabled: true
    variables:
      push_arch: s390x-enterprise-rhel72
      push_name: linux
      cmake_path: /opt/mongodbtoolchain/v2/lib/cmake
      cc: /opt/mongodbtoolchain/v2/bin/clang
    run_on:
    - rhel72-zseries-build
    - rhel72-zseries-test
    batchtime: 1440 # 1 day
  - id: suse11-64
    display_name: SLES 11
    disabled: true
    variables:
      push_arch: x86_64-suse11
      push_name: linux
      cmake_path: /opt/mongodbtoolchain/v2/lib/cmake
      cc: /opt/mongodbtoolchain/v2/bin/clang
    run_on: suse11-test
  - id: suse12-64
    display_name: SLES 12
    disabled: true
    variables:
      push_arch: x86_64-suse12
      push_name: linux
      cmake_path: /opt/mongodbtoolchain/v2/lib/cmake
      cc: /opt/mongodbtoolchain/v2/bin/clang
    run_on: suse12-test
